syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "rpcs/rpc_comment_relation.proto";

option go_package = "github.com/zizdlp/zbook/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: { title: "zbook api";
version: "0.1";
contact: {
name:
  "zbook";
url:
  "https://github.com/zizdlp/zbook";
email:
  "zizdlp@gmail.com";
};
}
;
}
;
service ZBookCommentRelation {
  // 1.CreateCommentRelation
  rpc CreateCommentRelation(CreateCommentRelationRequest)
      returns (CreateCommentRelationResponse) {
    option (google.api.http) = {
      post: "/v1/create_comment_relation",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this api to create like on comment";
  summary:
    "create like on comment";
  };
};

// 2.CreateCommentReport
rpc CreateCommentReport(CreateCommentReportRequest)
    returns (CreateCommentReportResponse) {
  option (google.api.http) = {
    post: "/v1/create_comment_report",
    body: "*",
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this api to create report on comment";
summary:
  "create report on comment";
};
}
;
// 3.DeleteCommentRelation
rpc DeleteCommentRelation(DeleteCommentRelationRequest)
    returns (DeleteCommentRelationResponse) {
  option (google.api.http) = {
    post: "/v1/delete_comment_relation",
    body: "*",
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this api to delete like on comment";
summary:
  "delete like on comment";
};
}
;
}
